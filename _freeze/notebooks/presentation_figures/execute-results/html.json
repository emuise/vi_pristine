{
  "hash": "f498b9056108ce176eedb41a7b220a13",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Vancouver Island\nauthor: Evan Muise\nbibliography: references.bib\n---\n\n\n# setup always run\n\nLoad Packages\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(terra)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nterra 1.7.78\n\nAttaching package: 'terra'\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(glue)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'glue'\n\nThe following object is masked from 'package:terra':\n\n    trim\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidyterra)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'tidyterra'\n\nThe following object is masked from 'package:stats':\n\n    filter\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(polars)\nlibrary(arrow)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'arrow'\n\nThe following object is masked from 'package:terra':\n\n    buffer\n\nThe following object is masked from 'package:lubridate':\n\n    duration\n\nThe following object is masked from 'package:utils':\n\n    timestamp\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(wdpar)\nlibrary(patchwork)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'patchwork'\n\nThe following object is masked from 'package:terra':\n\n    area\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(furrr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: future\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'data.table'\n\nThe following object is masked from 'package:terra':\n\n    shift\n\nThe following objects are masked from 'package:lubridate':\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggforce)\nlibrary(sgsR)\nlibrary(budR)\n```\n:::\n\n\nSet up folder structure\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbase_data_loc <- here::here(\"strathcona\")\ndir.create(base_data_loc, showWarnings = F)\n\ninput_loc <- here::here(\"data\", \"rasters\", \"inputs\")\ndir.create(input_loc, showWarnings = F)\ntab_loc <- here::here(base_data_loc, \"data\", \"tabs\")\ndir.create(tab_loc, showWarnings = F, recursive = T)\n\nscratch <- here::here(\"data\", \"scratch\")\ndir.create(scratch, showWarnings = F)\n\nsplit_loc <- here::here(tab_loc, \"split_strata\")\ndir.create(split_loc, showWarnings = F)\n\ntreat_loc <- here::here(tab_loc, \"treatment_strata\")\ndir.create(treat_loc, showWarnings = F)\n\nmahal_tab_loc <- here::here(tab_loc, \"mahal\")\ndir.create(mahal_tab_loc, showWarnings = F)\n\nmahal_ras_loc <- here::here(base_data_loc, \"data\", \"rasters\", \"mahal\")\ndir.create(mahal_ras_loc, showWarnings = F, recursive = T)\n\nnn_save_loc <- here::here(base_data_loc, \"data\", \"rasters\", \"nn_dist\")\ndir.create(nn_save_loc, showWarnings = F)\n\nshapefile_loc <- here::here(base_data_loc, \"data\", \"shapefiles\")\ndir.create(shapefile_loc, showWarnings = F)\n\nfigure_loc <- here::here(base_data_loc, \"figures\")\ndir.create(figure_loc, showWarnings = F)\n```\n:::\n\n\nMap and plot themes\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmap_theme <- theme_grey() + \n  theme(panel.background = element_rect(fill = \"white\", colour = \"black\"),\n    panel.grid = element_line(colour = \"#ebebeb\"),\n    legend.position = \"inside\",\n    legend.position.inside = c(0.8, 0.8))\n\nplot_theme <- theme_bw() +\n  theme(panel.grid = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nall_df <- read_parquet(\"E:/Sync/Masters/04_vi_pristine/strathcona/data_backup_mindhi_included/tabs/all_data.parquet\")\n\nstrata_oi <- function(confound_correlation_filter = T) {\n  if (confound_correlation_filter) {\n    c(\"clim_MAP_bin\", \"DEM_bin\", \"slope_bin\")\n  } else {\n    c(ends_with(\"bin\"))\n  }\n} \n\n\nforested_strata <- all_df %>%\n  filter(!is.na(forests)) %>%\n  unite(col = \"strata\", strata_oi(F), sep = \"-\")\n\nrm(all_df)\n```\n:::\n\n\n# histogram plot\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndata <- forested_strata %>%\n  select(CumDHI:total_biomass) %>%\n  select(-MinDHI) %>%\n  slice_sample(n = 1000) %>%\n  pivot_longer(everything()) %>%\n  left_join(keys$continuous %>%\n              select(name = variable,\n                     label)) %>%\n  select(-name)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nJoining with `by = join_by(name)`\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nquantiles <- data %>%\n  group_by(label) %>%\n  summarise(q90 = quantile(value, 0.90))\n\nquantil_hist <- data %>%\n  ggplot() +\n  geom_histogram(aes(x = value, y = after_stat(ncount))) +\n  facet_wrap(~fct_reorder(label, str_detect(label, \"DHI\")), scales = \"free\", ncol = 1) +\n  plot_theme +\n  geom_vline(data = quantiles, aes(xintercept = q90, colour = \"90th Percentile\"), lty = \"dashed\") +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"Value\",\n       col = NULL,\n       y = \"Percent\") +\n  scale_y_continuous(labels = scales::label_percent())\n\nggsave(here::here(figure_loc, \"hist_quantiles.png\"), plot = quantil_hist, height = 8, width = 6, dpi = 300)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n:::\n\n\n# INSET MAP\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nforests <- \"E:/Sync/Masters/analysis_03_decay/data/rasters/forests.dat\" %>%\n  rast()\n\nbcb_hres <- bcmaps::bc_bound_hres() %>%\n  vect()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nbc_bound_hres was updated on NULL\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nvi_mainland <- bcb_hres %>%\n  disagg() %>%\n  mutate(Shape_Area = expanse(.)) %>%\n  arrange(desc(Shape_Area)) %>%\n  filter(row_number() == 2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nforests_vi <- forests %>%\n  crop(vi_mainland, mask = T)\n\nnames(forests_vi) <- \"forests\"\n\nvi_rast <- vi_mainland %>%\n  rasterize(forests_vi, field = 1, touches = T) %>%\n  trim()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npa_filt_loc <- here::here(shapefile_loc, \"pa_filt.shp\")\n\nif (!file.exists(pa_filt_loc)) {\n  cad_pa <- wdpa_fetch(\"CAN\", download_dir = scratch)\n  \n  vi_pa <- cad_pa %>%\n    filter(st_geometry_type(.) != \"MULTIPOINT\") %>% # get rid of point PAs\n    vect() %>%\n    project(vi_mainland) %>%\n    crop(vi_mainland) %>%\n    janitor::clean_names() %>%\n    mutate(area = expanse(., unit = \"ha\"))\n  \n  pa_filt <- vi_pa  %>%\n    mutate(included = (iucn_cat %in% c(\"Ia\", \"Ib\", \"II\", \"IV\") &\n                         area >= 100))\n  \n  # this filters it to just strathcona to test it\n  pa_filt <- vi_pa %>%\n    filter(str_detect(name, \"Strath\")) %>%\n    mutate(included = T)\n  \n  writeVector(pa_filt, pa_filt_loc, overwrite = T)\n}\npa_filt <- vect(pa_filt_loc)\n  \npa_rast <- pa_filt %>%\n  rasterize(vi_rast)\n\nnames(pa_rast) <- \"pa\"\n```\n:::\n\n\nDownload great lakes data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nurl <- \"https://www.sciencebase.gov/catalog/file/get/530f8a0ee4b0e7e46bd300dd\"\n\ndest <- here::here(scratch, \"great_lakes.zip\")\n\nif (!file.exists(dest)) {\n  download.file(url, destfile = dest, mode = \"wb\")\n}\n\nunzip_dir <- here::here(scratch, \"great_lakes\")\n\nunzip(dest, exdir = unzip_dir)\n\ngreat_lakes <- list.files(unzip_dir, pattern = \"hydro.*\\\\.shp$\", recursive = T, full.names = T) %>%\n  map(vect) %>%\n  map(aggregate) %>%\n  vect() %>%\n  project(\"epsg:3347\")\n```\n:::\n\n\nMake the study area map Caption: Location of Vancouver Island's protected areas that meet the inclusion criteria (IUCN categories Ia, Ib, II, and IV; \\> 100 ha in size) for our study.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nvi_ext <- ext(vi_mainland)\n\n# download vectors of NA coutnries for the inset map\ncad <- geodata::gadm(\"Canada\", level = 1, path = \"scratch\")\n\nworld <- geodata::world(path = \"scratch\") %>%\n  project(\"epsg:3347\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Point outside of projection domain (GDAL error 1)\nWarning: Point outside of projection domain (GDAL error 1)\nWarning: Point outside of projection domain (GDAL error 1)\nWarning: Point outside of projection domain (GDAL error 1)\nWarning: Point outside of projection domain (GDAL error 1)\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncad_ext <- cad %>%\n  project(\"epsg:3347\") %>% \n  ext()\n\nvi_box <- vi_ext %>% \n  vect(crs = \"epsg:3005\") %>%\n  project(\"epsg:4437\")\n  \ninset <- ggplot() +\n  geom_spatvector(data = world, fill = \"#7f7f7f\") +\n  geom_spatvector(data = cad %>% project(\"epsg:3347\"), fill = \"#b3b3b3\") +\n  geom_spatvector(data = great_lakes, fill = \"lightblue\") +\n  geom_spatvector(data = bcb_hres, fill = \"#e5e5e5\") +\n  geom_spatvector(data = vi_box, col = \"red\", fill = \"#00000000\", linewidth = 1) +\n  #geom_spatvector(data = vi_mainland, col = \"red\") +\n  coord_sf(xlim = c(cad_ext$xmin, cad_ext$xmax),\n           ylim = c(cad_ext$ymin, cad_ext$ymax)) +\n  theme_bw() +\n  theme(panel.background = element_rect(fill = \"white\"),\n        axis.ticks = element_blank(),\n        axis.text = element_blank(),\n        plot.background = element_blank())\n```\n:::\n\n\n# variable maps\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nhf <- \"E:/Sync/Masters/04_vi_pristine/data/rasters/inputs/human_footprint.dat\" %>%\n  rast()\n\n\nhf_vi <- ggplot() +\n  geom_spatraster(data = hf) +\n  scico::scale_fill_scico(palette = \"bamako\", na.value = \"transparent\") +\n  labs(fill = \"Human Footprint\") +\n  map_theme +\n  inset_element(\n    inset,\n    0,\n    0,\n    0.4,\n    0.4\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n<SpatRaster> resampled to 500387 cells.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nggsave(here::here(figure_loc, \"hf_vi.png\"),\n       plot = hf_vi,\n       height = 6, width = 6,\n       dpi = 300)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndem <- \"E:/Sync/Masters/04_vi_pristine/data/rasters/inputs/DEM.dat\" %>%\n  rast()\n\ndem_vi <- ggplot() +\n  geom_spatraster(data = dem) +\n  #scico::scale_fill_scico(palette = \"batlowK\", na.value = \"transparent\") +\n  scale_fill_whitebox_c(na.value = \"transparent\") +\n  labs(fill = \"Elevation (m)\") +\n  map_theme\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n<SpatRaster> resampled to 500387 cells.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndem_vi_inset <- dem_vi +\n  inset_element(\n    inset,\n    0,\n    0,\n    0.4,\n    0.4\n  )\n\nggsave(here::here(figure_loc, \"dem_vi.png\"),\n       plot = dem_vi_inset,\n       height = 6, width = 6,\n       dpi = 300)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nclim <- \"E:/Sync/Masters/04_vi_pristine/data/rasters/inputs/clim_MAP.dat\" %>%\n  rast()\n\ndem_vi <- ggplot() +\n  geom_spatraster(data = clim) +\n  scico::scale_fill_scico(palette = \"batlowK\", na.value = \"transparent\") +\n  labs(fill = \"Mean Annual\\nPrecipitation (mm)\") +\n  map_theme +\n  inset_element(\n    inset,\n    0,\n    0,\n    0.4,\n    0.4\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n<SpatRaster> resampled to 500387 cells.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nggsave(here::here(figure_loc, \"map_vi.png\"),\n       plot = dem_vi,\n       height = 6, width = 6,\n       dpi = 300)\n```\n:::\n\n\n# mahalanobis plots for presentation\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npca_on_cols <- function(group_name, cols) {\n  for_pca <- forested_strata %>% select({{cols}})\n  \n  pca_vi <- prcomp(for_pca, center = T, scale = T)\n  \n  vars <- apply(pca_vi$x, 2, var)\n  \n  props <- vars / sum(vars)\n  \n  n_comps <- (props > 0.01) %>% sum()\n  \n  pca_vi_scores <- pca_vi$x %>% as_tibble() %>%\n    .[, 1:n_comps]\n  \n  names(pca_vi_scores) <- glue(\"{group_name}_{1:n_comps}\")\n  \n  pca_vi_scores\n}\n\npca_str <- pca_on_cols(\"str\",\n                       c(\n                         elev_p95,\n                         percentage_first_returns_above_2m,\n                         total_biomass,\n                         elev_cv\n                       ))\n\nstr_pca <- bind_cols(forested_strata, pca_str) %>%\n  select(strata,\n         forests,\n         elev_cv:total_biomass,\n         starts_with(\"str\"),\n         disturbance,\n         pa)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsubset <- str_pca %>%\n  filter(strata == \"4-3-3-4-2-1\", forests == \"coniferous\") %>%\n  mutate(q90 = elev_p95 >= quantile(elev_p95, 0.90),\n         treat_q90 = q90 & pa == 1)\n\n(\n  notransform <- subset %>%\n    #slice_sample(n = 10000) %>%\n    ggplot(\n      aes(x = elev_p95, y = percentage_first_returns_above_2m, col = treat_q90)\n    ) +\n    geom_jitter(height = 5, width = 5) +\n    plot_theme +\n    scale_colour_manual(values = c(\"#00000025\", \"red\"), name = \"Reference State\") +\n    labs(x = \"Canopy Height\", y = \"Canopy Cover\") +\n    theme(legend.position = \"bottom\")\n)\n```\n\n::: {.cell-output-display}\n![](presentation_figures_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nggsave(\n  here::here(figure_loc, \"mahal_notransform.png\"),\n  plot = notransform,\n  height = 6,\n  width = 6,\n  dpi = 300\n)\n\ntreat <- subset %>%\n  filter(treat_q90)\n\n\ntreat_centre <- treat %>%\n  select(str_1, str_2) %>%\n  summarize(across(everything(), mean))\n\ntreat_sds <- treat %>%\n  select(str_1, str_2) %>%\n  summarize(across(everything(), sd))\n\nset.seed(69420)\n\n\ntransform <- subset %>%\n  ggplot(aes(x = str_1, y = str_2)) +\n  geom_jitter(aes(col = treat_q90), height = 0.5, width = 0.5) +\n  plot_theme +\n  labs(x = \"Structure PCA 1\", y = \"Structure PCA 2\") +\n  scale_colour_manual(values = c(\"#00000025\", \"red\"), name = \"Reference State\") +\n  theme(legend.position = \"bottom\")\n\nggsave(here::here(figure_loc, \"mahal_transform.png\"),\n       plot = transform,\n       height = 6,\n       width = 6,\n       dpi = 300)\n\n\nset.seed(69420)\ntransform_sd <- transform +\n  geom_point(\n    data = treat_centre,\n    col = \"red\",\n    fill = \"red\",\n    size = 5,\n    shape = 25\n  ) +\n  geom_ellipse(\n    aes(\n      x0 = treat_centre %>% pull(str_1),\n      y0 = treat_centre %>% pull(str_2),\n      a = treat_sds %>% pull(str_1),\n      b = treat_sds %>% pull(str_2),\n      angle = 0\n    ),\n    alpha = 0.5,\n    lty = \"dashed\",\n    col = \"red\"\n  ) +\n  geom_ellipse(\n    aes(\n      x0 = treat_centre %>% pull(str_1),\n      y0 = treat_centre %>% pull(str_2),\n      a = treat_sds %>% pull(str_1) * 2,\n      b = treat_sds %>% pull(str_2) * 2,\n      angle = 0\n    ),\n    alpha = 0.5,\n    lty = \"dashed\",\n    col = \"red\"\n  ) +\n  geom_text(\n    data = tibble(egg = 1),\n    aes(\n      x = treat_centre %>% pull(str_1),\n      y = treat_centre %>% pull(str_2) + treat_sds %>% pull(str_2) + 0.2,\n      label = \"1SD\"\n    )\n  ) +\n  geom_text(\n    data = tibble(egg = 1),\n    aes(\n      x = treat_centre %>% pull(str_1),\n      y = treat_centre %>% pull(str_2) + treat_sds %>% pull(str_2) * 2 + 0.2,\n      label = \"2SD\"\n    )\n  )\n\nggsave(here::here(figure_loc, \"mahal_transform_sd.png\"),\n       plot = transform_sd,\n       height = 6,\n       width = 6,\n       dpi = 300)\n```\n:::\n",
    "supporting": [
      "presentation_figures_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}